{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\meme-generator\\\\src\\\\components\\\\Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport memesData from './memesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Meme = () => {\n  _s();\n\n  // How will you update your UI when something is clicked and value is change. \n\n  /*\r\n  For example, you need to change src of image after every click. You rendered it first. Like this\r\n  <img src={img-link}/>\r\n  And now you change the value of img-link. What will happen?? Though that value will be changed. But the above line will be implemeneted only once.\r\n  So UI won't be updated.\r\n  How to do update UI?\r\n  There is called state in react. It is value inside a component that react remembers in it's render, re-render cycle. Don't confuse it with props.\r\n  */\n  const generateRandomMeme = () => {\n    const memesArray = memesData.data.memes;\n    let randomNumber = Math.floor(Math.random() * 100);\n    let url = memesArray[randomNumber].url;\n  };\n\n  const [img_link, setLink] = React.useState(\"this is image link\"); //this is going to be an array having two values. one is the string value passed inside useState another is function\n\n  console.log(img_link);\n  setLink.return( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Bottom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateRandomMeme,\n        children: \"Get a new Meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n};\n\n_s(Meme, \"ck0HivzwC39i24/K/aX9mcg/nXw=\");\n\n_c = Meme;\nexport default Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","Meme","generateRandomMeme","memesArray","data","memes","randomNumber","Math","floor","random","url","img_link","setLink","useState","console","log","return"],"sources":["E:/react/meme-generator/src/components/Meme.js"],"sourcesContent":["import React from 'react'\r\nimport memesData from './memesData'\r\n\r\n\r\nconst Meme = () => {\r\n  // How will you update your UI when something is clicked and value is change. \r\n  /*\r\n  For example, you need to change src of image after every click. You rendered it first. Like this\r\n  <img src={img-link}/>\r\n  And now you change the value of img-link. What will happen?? Though that value will be changed. But the above line will be implemeneted only once.\r\n  So UI won't be updated.\r\n  How to do update UI?\r\n  There is called state in react. It is value inside a component that react remembers in it's render, re-render cycle. Don't confuse it with props.\r\n  */\r\n  const generateRandomMeme = () => {\r\n    const memesArray = memesData.data.memes;\r\n    let randomNumber = Math.floor(Math.random() * 100);\r\n    let url = (memesArray[randomNumber].url);\r\n  }\r\n  const [img_link, setLink] = React.useState(\"this is image link\"); //this is going to be an array having two values. one is the string value passed inside useState another is function\r\n\r\n  console.log(img_link);\r\n\r\n  setLink.\r\n  return (\r\n    <div>\r\n      <div className='meme-form'>\r\n        <div className='input-fields'>\r\n          <input type=\"text\" placeholder='Top' />\r\n          <input type=\"text\" placeholder='Bottom' />\r\n        </div>\r\n        <button onClick={generateRandomMeme}>Get a new Meme image</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Meme"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAGA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMC,kBAAkB,GAAG,MAAM;IAC/B,MAAMC,UAAU,GAAGH,SAAS,CAACI,IAAV,CAAeC,KAAlC;IACA,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAnB;IACA,IAAIC,GAAG,GAAIP,UAAU,CAACG,YAAD,CAAV,CAAyBI,GAApC;EACD,CAJD;;EAKA,MAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBb,KAAK,CAACc,QAAN,CAAe,oBAAf,CAA5B,CAfiB,CAeiD;;EAElEC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;EAEAC,OAAO,CACPI,MADA,eAEE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAK,SAAS,EAAC,cAAf;QAAA,wBACE;UAAO,IAAI,EAAC,MAAZ;UAAmB,WAAW,EAAC;QAA/B;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,WAAW,EAAC;QAA/B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAQ,OAAO,EAAEd,kBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QAFF;AAYD,CA/BD;;GAAMD,I;;KAAAA,I;AAiCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}